
 装饰者模式，动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更加有弹性的替代方案。
        Component: 抽象构件。是定义一个对象接口，可以给这些对象动态地添加职责。
        ConcreteComponent:具体构件。是定义了一个具体的对象，也可以给这个对象添加一些职责。
        Decorator: 抽象装饰类。是装饰抽象类，继承了Component,从外类来扩展Component类的功能，但对于Component来说，是无需知道Decorator存在的。
        ConcreteDecorator:具体装饰类，起到给Component添加职责的功能。